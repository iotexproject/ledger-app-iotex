/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_IOTEXTYPES_ACTION_PB_H_INCLUDED
#define PB_IOTEXTYPES_ACTION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _iotextypes_Encoding { 
    iotextypes_Encoding_IOTEX_PROTOBUF = 0, 
    iotextypes_Encoding_ETHEREUM_RLP = 1 
} iotextypes_Encoding;

typedef enum _iotextypes_RewardType { 
    iotextypes_RewardType_BlockReward = 0, 
    iotextypes_RewardType_EpochReward = 1 
} iotextypes_RewardType;

/* Struct definitions */
/* Candidates and list of candidates */
typedef struct _iotextypes_Candidate { 
    pb_callback_t address; 
    pb_callback_t votes; 
    pb_callback_t pubKey; 
    pb_callback_t rewardAddress; 
} iotextypes_Candidate;

typedef struct _iotextypes_CandidateList { 
    pb_callback_t candidates; 
} iotextypes_CandidateList;

typedef struct _iotextypes_ClaimFromRewardingFund { 
    pb_callback_t amount; 
    pb_callback_t data; 
} iotextypes_ClaimFromRewardingFund;

/* plum main chain APIs */
typedef struct _iotextypes_CreatePlumChain { 
    char dummy_field;
} iotextypes_CreatePlumChain;

typedef struct _iotextypes_DepositToRewardingFund { 
    pb_callback_t amount; 
    pb_callback_t data; 
} iotextypes_DepositToRewardingFund;

/* Deprecated */
typedef struct _iotextypes_EvmTransfer { 
    pb_callback_t amount; 
    pb_callback_t from; 
    pb_callback_t to; 
} iotextypes_EvmTransfer;

/* Deprecated */
typedef struct _iotextypes_EvmTransferList { 
    pb_callback_t evmTransfers; 
} iotextypes_EvmTransferList;

typedef struct _iotextypes_Execution { 
    pb_callback_t amount; 
    pb_callback_t contract; 
    pb_callback_t data; 
} iotextypes_Execution;

/* Deprecated */
typedef struct _iotextypes_Logs { 
    pb_callback_t logs; 
} iotextypes_Logs;

typedef struct _iotextypes_MerkleRoot { 
    pb_callback_t name; 
    pb_callback_t value; 
} iotextypes_MerkleRoot;

typedef struct _iotextypes_PlumCreateDeposit { 
    pb_callback_t subChainAddress; 
    pb_callback_t amount; 
    pb_callback_t recipient; 
} iotextypes_PlumCreateDeposit;

typedef struct _iotextypes_PlumPutBlock_RootsEntry { 
    pb_callback_t key; 
    pb_callback_t value; 
} iotextypes_PlumPutBlock_RootsEntry;

typedef struct _iotextypes_TerminatePlumChain { 
    pb_callback_t subChainAddress; 
} iotextypes_TerminatePlumChain;

typedef struct _iotextypes_Transfer { 
    /* used by state-based model */
    pb_callback_t amount; 
    pb_callback_t recipient; 
    pb_callback_t payload; 
} iotextypes_Transfer;

/* Deprecated */
typedef struct _iotextypes_ActionEvmTransfer { 
    pb_callback_t actionHash; 
    uint64_t numEvmTransfers; 
    pb_callback_t evmTransfers; 
} iotextypes_ActionEvmTransfer;

typedef struct _iotextypes_BlockEvmTransfer { 
    uint64_t blockHeight; 
    uint64_t numEvmTransfers; 
    pb_callback_t actionEvmTransfers; 
} iotextypes_BlockEvmTransfer;

typedef struct _iotextypes_CandidateBasicInfo { 
    char name[42]; 
    char operatorAddress[42]; 
    char rewardAddress[42]; 
} iotextypes_CandidateBasicInfo;

typedef struct _iotextypes_CreateDeposit { 
    uint32_t chainID; 
    pb_callback_t amount; 
    pb_callback_t recipient; 
} iotextypes_CreateDeposit;

typedef struct _iotextypes_GrantReward { 
    iotextypes_RewardType type; 
    uint64_t height; 
} iotextypes_GrantReward;

typedef struct _iotextypes_Log { 
    pb_callback_t contractAddress; 
    pb_callback_t topics; 
    pb_callback_t data; 
    uint64_t blkHeight; 
    pb_callback_t actHash; 
    uint32_t index; 
    pb_callback_t blkHash; 
} iotextypes_Log;

typedef struct _iotextypes_PlumChallengeExit { 
    pb_callback_t subChainAddress; 
    uint64_t coinID; 
    pb_callback_t challengeTransfer; 
    pb_callback_t challengeTransferBlockProof; 
    uint64_t challengeTransferBlockHeight; 
} iotextypes_PlumChallengeExit;

/* plum sub chain APIs */
typedef struct _iotextypes_PlumFinalizeExit { 
    pb_callback_t subChainAddress; 
    uint64_t coinID; 
} iotextypes_PlumFinalizeExit;

typedef struct _iotextypes_PlumPutBlock { 
    pb_callback_t subChainAddress; 
    uint64_t height; 
    pb_callback_t roots; 
} iotextypes_PlumPutBlock;

typedef struct _iotextypes_PlumResponseChallengeExit { 
    pb_callback_t subChainAddress; 
    uint64_t coinID; 
    pb_callback_t challengeTransfer; 
    pb_callback_t responseTransfer; 
    pb_callback_t responseTransferBlockProof; 
    uint64_t previousTransferBlockHeight; 
} iotextypes_PlumResponseChallengeExit;

typedef struct _iotextypes_PlumSettleDeposit { 
    uint64_t coinID; 
} iotextypes_PlumSettleDeposit;

typedef struct _iotextypes_PlumStartExit { 
    pb_callback_t subChainAddress; 
    pb_callback_t previousTransfer; 
    pb_callback_t previousTransferBlockProof; 
    uint64_t previousTransferBlockHeight; 
    pb_callback_t exitTransfer; 
    pb_callback_t exitTransferBlockProof; 
    uint64_t exitTransferBlockHeight; 
} iotextypes_PlumStartExit;

typedef struct _iotextypes_PlumTransfer { 
    uint64_t coinID; 
    pb_callback_t denomination; 
    pb_callback_t owner; 
    pb_callback_t recipient; 
} iotextypes_PlumTransfer;

typedef struct _iotextypes_PutBlock { 
    pb_callback_t subChainAddress; 
    uint64_t height; 
    pb_callback_t roots; 
} iotextypes_PutBlock;

typedef struct _iotextypes_PutPollResult { 
    uint64_t height; 
    bool has_candidates;
    iotextypes_CandidateList candidates; 
} iotextypes_PutPollResult;

typedef struct _iotextypes_Receipt { 
    uint64_t status; 
    uint64_t blkHeight; 
    pb_callback_t actHash; 
    uint64_t gasConsumed; 
    pb_callback_t contractAddress; 
    pb_callback_t logs; 
    pb_callback_t executionRevertMsg; 
} iotextypes_Receipt;

typedef struct _iotextypes_SettleDeposit { 
    pb_callback_t amount; 
    pb_callback_t recipient; 
    uint64_t index; 
} iotextypes_SettleDeposit;

/* add the amount of bucket */
typedef struct _iotextypes_StakeAddDeposit { 
    uint64_t bucketIndex; 
    pb_callback_t amount; 
    pb_callback_t payload; 
} iotextypes_StakeAddDeposit;

/* move the bucket to vote for another candidate or transfer the ownership of bucket to another voters */
typedef struct _iotextypes_StakeChangeCandidate { 
    uint64_t bucketIndex; 
    pb_callback_t candidateName; 
    pb_callback_t payload; 
} iotextypes_StakeChangeCandidate;

/* create stake */
typedef struct _iotextypes_StakeCreate { 
    pb_callback_t candidateName; 
    pb_callback_t stakedAmount; 
    uint32_t stakedDuration; 
    bool autoStake; 
    pb_callback_t payload; 
} iotextypes_StakeCreate;

/* unstake or withdraw */
typedef struct _iotextypes_StakeReclaim { 
    uint64_t bucketIndex; 
    pb_callback_t payload; 
} iotextypes_StakeReclaim;

/* restake the duration and autoStake flag of bucket */
typedef struct _iotextypes_StakeRestake { 
    uint64_t bucketIndex; 
    uint32_t stakedDuration; 
    bool autoStake; 
    pb_callback_t payload; 
} iotextypes_StakeRestake;

typedef struct _iotextypes_StakeTransferOwnership { 
    uint64_t bucketIndex; 
    pb_callback_t voterAddress; 
    pb_callback_t payload; 
} iotextypes_StakeTransferOwnership;

typedef struct _iotextypes_StartSubChain { 
    /* TODO: chainID chould be assigned by system and returned via a receipt */
    uint32_t chainID; 
    pb_callback_t securityDeposit; 
    pb_callback_t operationDeposit; 
    uint64_t startHeight; 
    uint64_t parentHeightOffset; 
} iotextypes_StartSubChain;

typedef struct _iotextypes_StopSubChain { 
    uint32_t chainID; 
    uint64_t stopHeight; 
    pb_callback_t subChainAddress; 
} iotextypes_StopSubChain;

typedef struct _iotextypes_CandidateRegister { 
    bool has_candidate;
    iotextypes_CandidateBasicInfo candidate; 
    pb_callback_t stakedAmount; 
    uint32_t stakedDuration; 
    bool autoStake; 
    pb_callback_t ownerAddress; /* if ownerAddress is absent, owner of candidate is the sender */
    pb_callback_t payload; 
} iotextypes_CandidateRegister;

typedef struct _iotextypes_ActionCore { 
    uint32_t version; 
    uint64_t nonce; 
    uint64_t gasLimit; 
    char gasPrice[40]; 
    uint32_t chainID; 
    pb_callback_t cb_action;
    pb_size_t which_action;
    union {
        iotextypes_Transfer transfer;
        iotextypes_Execution execution;
        iotextypes_StartSubChain startSubChain;
        iotextypes_StopSubChain stopSubChain;
        iotextypes_PutBlock putBlock;
        iotextypes_CreateDeposit createDeposit;
        iotextypes_SettleDeposit settleDeposit;
        iotextypes_CreatePlumChain createPlumChain;
        iotextypes_TerminatePlumChain terminatePlumChain;
        iotextypes_PlumPutBlock plumPutBlock;
        iotextypes_PlumCreateDeposit plumCreateDeposit;
        iotextypes_PlumStartExit plumStartExit;
        iotextypes_PlumChallengeExit plumChallengeExit;
        iotextypes_PlumResponseChallengeExit plumResponseChallengeExit;
        iotextypes_PlumFinalizeExit plumFinalizeExit;
        iotextypes_PlumSettleDeposit plumSettleDeposit;
        iotextypes_PlumTransfer plumTransfer;
        iotextypes_DepositToRewardingFund depositToRewardingFund;
        iotextypes_ClaimFromRewardingFund claimFromRewardingFund;
        iotextypes_GrantReward grantReward;
        iotextypes_StakeCreate stakeCreate;
        iotextypes_StakeReclaim stakeUnstake;
        iotextypes_StakeReclaim stakeWithdraw;
        iotextypes_StakeAddDeposit stakeAddDeposit;
        iotextypes_StakeRestake stakeRestake;
        iotextypes_StakeChangeCandidate stakeChangeCandidate;
        iotextypes_StakeTransferOwnership stakeTransferOwnership;
        iotextypes_CandidateRegister candidateRegister;
        iotextypes_CandidateBasicInfo candidateUpdate;
        iotextypes_PutPollResult putPollResult;
    } action; 
} iotextypes_ActionCore;

typedef struct _iotextypes_Action { 
    bool has_core;
    iotextypes_ActionCore core; 
    pb_callback_t senderPubKey; 
    pb_callback_t signature; 
    iotextypes_Encoding encoding; 
} iotextypes_Action;


/* Helper constants for enums */
#define _iotextypes_Encoding_MIN iotextypes_Encoding_IOTEX_PROTOBUF
#define _iotextypes_Encoding_MAX iotextypes_Encoding_ETHEREUM_RLP
#define _iotextypes_Encoding_ARRAYSIZE ((iotextypes_Encoding)(iotextypes_Encoding_ETHEREUM_RLP+1))

#define _iotextypes_RewardType_MIN iotextypes_RewardType_BlockReward
#define _iotextypes_RewardType_MAX iotextypes_RewardType_EpochReward
#define _iotextypes_RewardType_ARRAYSIZE ((iotextypes_RewardType)(iotextypes_RewardType_EpochReward+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define iotextypes_Transfer_init_default         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_Candidate_init_default        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_CandidateList_init_default    {{{NULL}, NULL}}
#define iotextypes_PutPollResult_init_default    {0, false, iotextypes_CandidateList_init_default}
#define iotextypes_Execution_init_default        {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeCreate_init_default      {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define iotextypes_StakeReclaim_init_default     {0, {{NULL}, NULL}}
#define iotextypes_StakeAddDeposit_init_default  {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeRestake_init_default     {0, 0, 0, {{NULL}, NULL}}
#define iotextypes_StakeChangeCandidate_init_default {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeTransferOwnership_init_default {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_CandidateBasicInfo_init_default {"", "", ""}
#define iotextypes_CandidateRegister_init_default {false, iotextypes_CandidateBasicInfo_init_default, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StartSubChain_init_default    {0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0}
#define iotextypes_StopSubChain_init_default     {0, 0, {{NULL}, NULL}}
#define iotextypes_MerkleRoot_init_default       {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PutBlock_init_default         {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_CreateDeposit_init_default    {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_SettleDeposit_init_default    {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_CreatePlumChain_init_default  {0}
#define iotextypes_TerminatePlumChain_init_default {{{NULL}, NULL}}
#define iotextypes_PlumPutBlock_init_default     {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_PlumPutBlock_RootsEntry_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PlumCreateDeposit_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PlumStartExit_init_default    {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumChallengeExit_init_default {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumResponseChallengeExit_init_default {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumFinalizeExit_init_default {{{NULL}, NULL}, 0}
#define iotextypes_PlumSettleDeposit_init_default {0}
#define iotextypes_PlumTransfer_init_default     {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_ActionCore_init_default       {0, 0, 0, "", 0, {{NULL}, NULL}, 0, {iotextypes_Transfer_init_default}}
#define iotextypes_Action_init_default           {false, iotextypes_ActionCore_init_default, {{NULL}, NULL}, {{NULL}, NULL}, _iotextypes_Encoding_MIN}
#define iotextypes_Receipt_init_default          {0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_Log_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_Logs_init_default             {{{NULL}, NULL}}
#define iotextypes_EvmTransfer_init_default      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_EvmTransferList_init_default  {{{NULL}, NULL}}
#define iotextypes_ActionEvmTransfer_init_default {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_BlockEvmTransfer_init_default {0, 0, {{NULL}, NULL}}
#define iotextypes_DepositToRewardingFund_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_ClaimFromRewardingFund_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_GrantReward_init_default      {_iotextypes_RewardType_MIN, 0}
#define iotextypes_Transfer_init_zero            {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_Candidate_init_zero           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_CandidateList_init_zero       {{{NULL}, NULL}}
#define iotextypes_PutPollResult_init_zero       {0, false, iotextypes_CandidateList_init_zero}
#define iotextypes_Execution_init_zero           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeCreate_init_zero         {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}}
#define iotextypes_StakeReclaim_init_zero        {0, {{NULL}, NULL}}
#define iotextypes_StakeAddDeposit_init_zero     {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeRestake_init_zero        {0, 0, 0, {{NULL}, NULL}}
#define iotextypes_StakeChangeCandidate_init_zero {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StakeTransferOwnership_init_zero {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_CandidateBasicInfo_init_zero  {"", "", ""}
#define iotextypes_CandidateRegister_init_zero   {false, iotextypes_CandidateBasicInfo_init_zero, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_StartSubChain_init_zero       {0, {{NULL}, NULL}, {{NULL}, NULL}, 0, 0}
#define iotextypes_StopSubChain_init_zero        {0, 0, {{NULL}, NULL}}
#define iotextypes_MerkleRoot_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PutBlock_init_zero            {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_CreateDeposit_init_zero       {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_SettleDeposit_init_zero       {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_CreatePlumChain_init_zero     {0}
#define iotextypes_TerminatePlumChain_init_zero  {{{NULL}, NULL}}
#define iotextypes_PlumPutBlock_init_zero        {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_PlumPutBlock_RootsEntry_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PlumCreateDeposit_init_zero   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_PlumStartExit_init_zero       {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumChallengeExit_init_zero   {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumResponseChallengeExit_init_zero {{{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define iotextypes_PlumFinalizeExit_init_zero    {{{NULL}, NULL}, 0}
#define iotextypes_PlumSettleDeposit_init_zero   {0}
#define iotextypes_PlumTransfer_init_zero        {0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_ActionCore_init_zero          {0, 0, 0, "", 0, {{NULL}, NULL}, 0, {iotextypes_Transfer_init_zero}}
#define iotextypes_Action_init_zero              {false, iotextypes_ActionCore_init_zero, {{NULL}, NULL}, {{NULL}, NULL}, _iotextypes_Encoding_MIN}
#define iotextypes_Receipt_init_zero             {0, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_Log_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_Logs_init_zero                {{{NULL}, NULL}}
#define iotextypes_EvmTransfer_init_zero         {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_EvmTransferList_init_zero     {{{NULL}, NULL}}
#define iotextypes_ActionEvmTransfer_init_zero   {{{NULL}, NULL}, 0, {{NULL}, NULL}}
#define iotextypes_BlockEvmTransfer_init_zero    {0, 0, {{NULL}, NULL}}
#define iotextypes_DepositToRewardingFund_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_ClaimFromRewardingFund_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define iotextypes_GrantReward_init_zero         {_iotextypes_RewardType_MIN, 0}

/* Field tags (for use in manual encoding/decoding) */
#define iotextypes_Candidate_address_tag         1
#define iotextypes_Candidate_votes_tag           2
#define iotextypes_Candidate_pubKey_tag          3
#define iotextypes_Candidate_rewardAddress_tag   4
#define iotextypes_CandidateList_candidates_tag  1
#define iotextypes_ClaimFromRewardingFund_amount_tag 1
#define iotextypes_ClaimFromRewardingFund_data_tag 2
#define iotextypes_DepositToRewardingFund_amount_tag 1
#define iotextypes_DepositToRewardingFund_data_tag 2
#define iotextypes_EvmTransfer_amount_tag        1
#define iotextypes_EvmTransfer_from_tag          2
#define iotextypes_EvmTransfer_to_tag            3
#define iotextypes_EvmTransferList_evmTransfers_tag 1
#define iotextypes_Execution_amount_tag          1
#define iotextypes_Execution_contract_tag        2
#define iotextypes_Execution_data_tag            3
#define iotextypes_Logs_logs_tag                 1
#define iotextypes_MerkleRoot_name_tag           1
#define iotextypes_MerkleRoot_value_tag          2
#define iotextypes_PlumCreateDeposit_subChainAddress_tag 1
#define iotextypes_PlumCreateDeposit_amount_tag  2
#define iotextypes_PlumCreateDeposit_recipient_tag 3
#define iotextypes_PlumPutBlock_RootsEntry_key_tag 1
#define iotextypes_PlumPutBlock_RootsEntry_value_tag 2
#define iotextypes_TerminatePlumChain_subChainAddress_tag 1
#define iotextypes_Transfer_amount_tag           1
#define iotextypes_Transfer_recipient_tag        2
#define iotextypes_Transfer_payload_tag          3
#define iotextypes_ActionEvmTransfer_actionHash_tag 1
#define iotextypes_ActionEvmTransfer_numEvmTransfers_tag 2
#define iotextypes_ActionEvmTransfer_evmTransfers_tag 3
#define iotextypes_BlockEvmTransfer_blockHeight_tag 1
#define iotextypes_BlockEvmTransfer_numEvmTransfers_tag 2
#define iotextypes_BlockEvmTransfer_actionEvmTransfers_tag 3
#define iotextypes_CandidateBasicInfo_name_tag   1
#define iotextypes_CandidateBasicInfo_operatorAddress_tag 2
#define iotextypes_CandidateBasicInfo_rewardAddress_tag 3
#define iotextypes_CreateDeposit_chainID_tag     1
#define iotextypes_CreateDeposit_amount_tag      2
#define iotextypes_CreateDeposit_recipient_tag   3
#define iotextypes_GrantReward_type_tag          1
#define iotextypes_GrantReward_height_tag        2
#define iotextypes_Log_contractAddress_tag       1
#define iotextypes_Log_topics_tag                2
#define iotextypes_Log_data_tag                  3
#define iotextypes_Log_blkHeight_tag             4
#define iotextypes_Log_actHash_tag               5
#define iotextypes_Log_index_tag                 6
#define iotextypes_Log_blkHash_tag               7
#define iotextypes_PlumChallengeExit_subChainAddress_tag 1
#define iotextypes_PlumChallengeExit_coinID_tag  2
#define iotextypes_PlumChallengeExit_challengeTransfer_tag 3
#define iotextypes_PlumChallengeExit_challengeTransferBlockProof_tag 4
#define iotextypes_PlumChallengeExit_challengeTransferBlockHeight_tag 5
#define iotextypes_PlumFinalizeExit_subChainAddress_tag 1
#define iotextypes_PlumFinalizeExit_coinID_tag   2
#define iotextypes_PlumPutBlock_subChainAddress_tag 1
#define iotextypes_PlumPutBlock_height_tag       2
#define iotextypes_PlumPutBlock_roots_tag        3
#define iotextypes_PlumResponseChallengeExit_subChainAddress_tag 1
#define iotextypes_PlumResponseChallengeExit_coinID_tag 2
#define iotextypes_PlumResponseChallengeExit_challengeTransfer_tag 3
#define iotextypes_PlumResponseChallengeExit_responseTransfer_tag 4
#define iotextypes_PlumResponseChallengeExit_responseTransferBlockProof_tag 5
#define iotextypes_PlumResponseChallengeExit_previousTransferBlockHeight_tag 6
#define iotextypes_PlumSettleDeposit_coinID_tag  1
#define iotextypes_PlumStartExit_subChainAddress_tag 1
#define iotextypes_PlumStartExit_previousTransfer_tag 2
#define iotextypes_PlumStartExit_previousTransferBlockProof_tag 3
#define iotextypes_PlumStartExit_previousTransferBlockHeight_tag 4
#define iotextypes_PlumStartExit_exitTransfer_tag 5
#define iotextypes_PlumStartExit_exitTransferBlockProof_tag 6
#define iotextypes_PlumStartExit_exitTransferBlockHeight_tag 7
#define iotextypes_PlumTransfer_coinID_tag       1
#define iotextypes_PlumTransfer_denomination_tag 2
#define iotextypes_PlumTransfer_owner_tag        3
#define iotextypes_PlumTransfer_recipient_tag    4
#define iotextypes_PutBlock_subChainAddress_tag  1
#define iotextypes_PutBlock_height_tag           2
#define iotextypes_PutBlock_roots_tag            3
#define iotextypes_PutPollResult_height_tag      1
#define iotextypes_PutPollResult_candidates_tag  2
#define iotextypes_Receipt_status_tag            1
#define iotextypes_Receipt_blkHeight_tag         2
#define iotextypes_Receipt_actHash_tag           3
#define iotextypes_Receipt_gasConsumed_tag       4
#define iotextypes_Receipt_contractAddress_tag   5
#define iotextypes_Receipt_logs_tag              6
#define iotextypes_Receipt_executionRevertMsg_tag 7
#define iotextypes_SettleDeposit_amount_tag      1
#define iotextypes_SettleDeposit_recipient_tag   2
#define iotextypes_SettleDeposit_index_tag       3
#define iotextypes_StakeAddDeposit_bucketIndex_tag 1
#define iotextypes_StakeAddDeposit_amount_tag    2
#define iotextypes_StakeAddDeposit_payload_tag   3
#define iotextypes_StakeChangeCandidate_bucketIndex_tag 1
#define iotextypes_StakeChangeCandidate_candidateName_tag 2
#define iotextypes_StakeChangeCandidate_payload_tag 3
#define iotextypes_StakeCreate_candidateName_tag 1
#define iotextypes_StakeCreate_stakedAmount_tag  2
#define iotextypes_StakeCreate_stakedDuration_tag 3
#define iotextypes_StakeCreate_autoStake_tag     4
#define iotextypes_StakeCreate_payload_tag       5
#define iotextypes_StakeReclaim_bucketIndex_tag  1
#define iotextypes_StakeReclaim_payload_tag      2
#define iotextypes_StakeRestake_bucketIndex_tag  1
#define iotextypes_StakeRestake_stakedDuration_tag 2
#define iotextypes_StakeRestake_autoStake_tag    3
#define iotextypes_StakeRestake_payload_tag      4
#define iotextypes_StakeTransferOwnership_bucketIndex_tag 1
#define iotextypes_StakeTransferOwnership_voterAddress_tag 2
#define iotextypes_StakeTransferOwnership_payload_tag 3
#define iotextypes_StartSubChain_chainID_tag     1
#define iotextypes_StartSubChain_securityDeposit_tag 2
#define iotextypes_StartSubChain_operationDeposit_tag 3
#define iotextypes_StartSubChain_startHeight_tag 4
#define iotextypes_StartSubChain_parentHeightOffset_tag 5
#define iotextypes_StopSubChain_chainID_tag      1
#define iotextypes_StopSubChain_stopHeight_tag   2
#define iotextypes_StopSubChain_subChainAddress_tag 3
#define iotextypes_CandidateRegister_candidate_tag 1
#define iotextypes_CandidateRegister_stakedAmount_tag 2
#define iotextypes_CandidateRegister_stakedDuration_tag 3
#define iotextypes_CandidateRegister_autoStake_tag 4
#define iotextypes_CandidateRegister_ownerAddress_tag 5
#define iotextypes_CandidateRegister_payload_tag 6
#define iotextypes_ActionCore_version_tag        1
#define iotextypes_ActionCore_nonce_tag          2
#define iotextypes_ActionCore_gasLimit_tag       3
#define iotextypes_ActionCore_gasPrice_tag       4
#define iotextypes_ActionCore_chainID_tag        5
#define iotextypes_ActionCore_transfer_tag       10
#define iotextypes_ActionCore_execution_tag      12
#define iotextypes_ActionCore_startSubChain_tag  13
#define iotextypes_ActionCore_stopSubChain_tag   14
#define iotextypes_ActionCore_putBlock_tag       15
#define iotextypes_ActionCore_createDeposit_tag  16
#define iotextypes_ActionCore_settleDeposit_tag  17
#define iotextypes_ActionCore_createPlumChain_tag 18
#define iotextypes_ActionCore_terminatePlumChain_tag 19
#define iotextypes_ActionCore_plumPutBlock_tag   20
#define iotextypes_ActionCore_plumCreateDeposit_tag 21
#define iotextypes_ActionCore_plumStartExit_tag  22
#define iotextypes_ActionCore_plumChallengeExit_tag 23
#define iotextypes_ActionCore_plumResponseChallengeExit_tag 24
#define iotextypes_ActionCore_plumFinalizeExit_tag 25
#define iotextypes_ActionCore_plumSettleDeposit_tag 26
#define iotextypes_ActionCore_plumTransfer_tag   27
#define iotextypes_ActionCore_depositToRewardingFund_tag 30
#define iotextypes_ActionCore_claimFromRewardingFund_tag 31
#define iotextypes_ActionCore_grantReward_tag    32
#define iotextypes_ActionCore_stakeCreate_tag    40
#define iotextypes_ActionCore_stakeUnstake_tag   41
#define iotextypes_ActionCore_stakeWithdraw_tag  42
#define iotextypes_ActionCore_stakeAddDeposit_tag 43
#define iotextypes_ActionCore_stakeRestake_tag   44
#define iotextypes_ActionCore_stakeChangeCandidate_tag 45
#define iotextypes_ActionCore_stakeTransferOwnership_tag 46
#define iotextypes_ActionCore_candidateRegister_tag 47
#define iotextypes_ActionCore_candidateUpdate_tag 48
#define iotextypes_ActionCore_putPollResult_tag  50
#define iotextypes_Action_core_tag               1
#define iotextypes_Action_senderPubKey_tag       2
#define iotextypes_Action_signature_tag          3
#define iotextypes_Action_encoding_tag           4

/* Struct field encoding specification for nanopb */
#define iotextypes_Transfer_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            1) \
X(a, CALLBACK, SINGULAR, STRING,   recipient,         2) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           3)
#define iotextypes_Transfer_CALLBACK pb_default_field_callback
#define iotextypes_Transfer_DEFAULT NULL

#define iotextypes_Candidate_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   address,           1) \
X(a, CALLBACK, SINGULAR, BYTES,    votes,             2) \
X(a, CALLBACK, SINGULAR, BYTES,    pubKey,            3) \
X(a, CALLBACK, SINGULAR, STRING,   rewardAddress,     4)
#define iotextypes_Candidate_CALLBACK pb_default_field_callback
#define iotextypes_Candidate_DEFAULT NULL

#define iotextypes_CandidateList_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  candidates,        1)
#define iotextypes_CandidateList_CALLBACK pb_default_field_callback
#define iotextypes_CandidateList_DEFAULT NULL
#define iotextypes_CandidateList_candidates_MSGTYPE iotextypes_Candidate

#define iotextypes_PutPollResult_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   height,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  candidates,        2)
#define iotextypes_PutPollResult_CALLBACK NULL
#define iotextypes_PutPollResult_DEFAULT NULL
#define iotextypes_PutPollResult_candidates_MSGTYPE iotextypes_CandidateList

#define iotextypes_Execution_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            1) \
X(a, CALLBACK, SINGULAR, STRING,   contract,          2) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              3)
#define iotextypes_Execution_CALLBACK pb_default_field_callback
#define iotextypes_Execution_DEFAULT NULL

#define iotextypes_StakeCreate_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   candidateName,     1) \
X(a, CALLBACK, SINGULAR, STRING,   stakedAmount,      2) \
X(a, STATIC,   SINGULAR, UINT32,   stakedDuration,    3) \
X(a, STATIC,   SINGULAR, BOOL,     autoStake,         4) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           5)
#define iotextypes_StakeCreate_CALLBACK pb_default_field_callback
#define iotextypes_StakeCreate_DEFAULT NULL

#define iotextypes_StakeReclaim_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   bucketIndex,       1) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           2)
#define iotextypes_StakeReclaim_CALLBACK pb_default_field_callback
#define iotextypes_StakeReclaim_DEFAULT NULL

#define iotextypes_StakeAddDeposit_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   bucketIndex,       1) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            2) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           3)
#define iotextypes_StakeAddDeposit_CALLBACK pb_default_field_callback
#define iotextypes_StakeAddDeposit_DEFAULT NULL

#define iotextypes_StakeRestake_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   bucketIndex,       1) \
X(a, STATIC,   SINGULAR, UINT32,   stakedDuration,    2) \
X(a, STATIC,   SINGULAR, BOOL,     autoStake,         3) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           4)
#define iotextypes_StakeRestake_CALLBACK pb_default_field_callback
#define iotextypes_StakeRestake_DEFAULT NULL

#define iotextypes_StakeChangeCandidate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   bucketIndex,       1) \
X(a, CALLBACK, SINGULAR, STRING,   candidateName,     2) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           3)
#define iotextypes_StakeChangeCandidate_CALLBACK pb_default_field_callback
#define iotextypes_StakeChangeCandidate_DEFAULT NULL

#define iotextypes_StakeTransferOwnership_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   bucketIndex,       1) \
X(a, CALLBACK, SINGULAR, STRING,   voterAddress,      2) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           3)
#define iotextypes_StakeTransferOwnership_CALLBACK pb_default_field_callback
#define iotextypes_StakeTransferOwnership_DEFAULT NULL

#define iotextypes_CandidateBasicInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, STRING,   operatorAddress,   2) \
X(a, STATIC,   SINGULAR, STRING,   rewardAddress,     3)
#define iotextypes_CandidateBasicInfo_CALLBACK NULL
#define iotextypes_CandidateBasicInfo_DEFAULT NULL

#define iotextypes_CandidateRegister_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  candidate,         1) \
X(a, CALLBACK, SINGULAR, STRING,   stakedAmount,      2) \
X(a, STATIC,   SINGULAR, UINT32,   stakedDuration,    3) \
X(a, STATIC,   SINGULAR, BOOL,     autoStake,         4) \
X(a, CALLBACK, SINGULAR, STRING,   ownerAddress,      5) \
X(a, CALLBACK, SINGULAR, BYTES,    payload,           6)
#define iotextypes_CandidateRegister_CALLBACK pb_default_field_callback
#define iotextypes_CandidateRegister_DEFAULT NULL
#define iotextypes_CandidateRegister_candidate_MSGTYPE iotextypes_CandidateBasicInfo

#define iotextypes_StartSubChain_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   chainID,           1) \
X(a, CALLBACK, SINGULAR, STRING,   securityDeposit,   2) \
X(a, CALLBACK, SINGULAR, STRING,   operationDeposit,   3) \
X(a, STATIC,   SINGULAR, UINT64,   startHeight,       4) \
X(a, STATIC,   SINGULAR, UINT64,   parentHeightOffset,   5)
#define iotextypes_StartSubChain_CALLBACK pb_default_field_callback
#define iotextypes_StartSubChain_DEFAULT NULL

#define iotextypes_StopSubChain_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   chainID,           1) \
X(a, STATIC,   SINGULAR, UINT64,   stopHeight,        2) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   3)
#define iotextypes_StopSubChain_CALLBACK pb_default_field_callback
#define iotextypes_StopSubChain_DEFAULT NULL

#define iotextypes_MerkleRoot_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, BYTES,    value,             2)
#define iotextypes_MerkleRoot_CALLBACK pb_default_field_callback
#define iotextypes_MerkleRoot_DEFAULT NULL

#define iotextypes_PutBlock_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2) \
X(a, CALLBACK, REPEATED, MESSAGE,  roots,             3)
#define iotextypes_PutBlock_CALLBACK pb_default_field_callback
#define iotextypes_PutBlock_DEFAULT NULL
#define iotextypes_PutBlock_roots_MSGTYPE iotextypes_MerkleRoot

#define iotextypes_CreateDeposit_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   chainID,           1) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            2) \
X(a, CALLBACK, SINGULAR, STRING,   recipient,         3)
#define iotextypes_CreateDeposit_CALLBACK pb_default_field_callback
#define iotextypes_CreateDeposit_DEFAULT NULL

#define iotextypes_SettleDeposit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            1) \
X(a, CALLBACK, SINGULAR, STRING,   recipient,         2) \
X(a, STATIC,   SINGULAR, UINT64,   index,             3)
#define iotextypes_SettleDeposit_CALLBACK pb_default_field_callback
#define iotextypes_SettleDeposit_DEFAULT NULL

#define iotextypes_CreatePlumChain_FIELDLIST(X, a) \

#define iotextypes_CreatePlumChain_CALLBACK NULL
#define iotextypes_CreatePlumChain_DEFAULT NULL

#define iotextypes_TerminatePlumChain_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1)
#define iotextypes_TerminatePlumChain_CALLBACK pb_default_field_callback
#define iotextypes_TerminatePlumChain_DEFAULT NULL

#define iotextypes_PlumPutBlock_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2) \
X(a, CALLBACK, REPEATED, MESSAGE,  roots,             3)
#define iotextypes_PlumPutBlock_CALLBACK pb_default_field_callback
#define iotextypes_PlumPutBlock_DEFAULT NULL
#define iotextypes_PlumPutBlock_roots_MSGTYPE iotextypes_PlumPutBlock_RootsEntry

#define iotextypes_PlumPutBlock_RootsEntry_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   key,               1) \
X(a, CALLBACK, SINGULAR, BYTES,    value,             2)
#define iotextypes_PlumPutBlock_RootsEntry_CALLBACK pb_default_field_callback
#define iotextypes_PlumPutBlock_RootsEntry_DEFAULT NULL

#define iotextypes_PlumCreateDeposit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            2) \
X(a, CALLBACK, SINGULAR, STRING,   recipient,         3)
#define iotextypes_PlumCreateDeposit_CALLBACK pb_default_field_callback
#define iotextypes_PlumCreateDeposit_DEFAULT NULL

#define iotextypes_PlumStartExit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, CALLBACK, SINGULAR, BYTES,    previousTransfer,   2) \
X(a, CALLBACK, SINGULAR, BYTES,    previousTransferBlockProof,   3) \
X(a, STATIC,   SINGULAR, UINT64,   previousTransferBlockHeight,   4) \
X(a, CALLBACK, SINGULAR, BYTES,    exitTransfer,      5) \
X(a, CALLBACK, SINGULAR, BYTES,    exitTransferBlockProof,   6) \
X(a, STATIC,   SINGULAR, UINT64,   exitTransferBlockHeight,   7)
#define iotextypes_PlumStartExit_CALLBACK pb_default_field_callback
#define iotextypes_PlumStartExit_DEFAULT NULL

#define iotextypes_PlumChallengeExit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, STATIC,   SINGULAR, UINT64,   coinID,            2) \
X(a, CALLBACK, SINGULAR, BYTES,    challengeTransfer,   3) \
X(a, CALLBACK, SINGULAR, BYTES,    challengeTransferBlockProof,   4) \
X(a, STATIC,   SINGULAR, UINT64,   challengeTransferBlockHeight,   5)
#define iotextypes_PlumChallengeExit_CALLBACK pb_default_field_callback
#define iotextypes_PlumChallengeExit_DEFAULT NULL

#define iotextypes_PlumResponseChallengeExit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, STATIC,   SINGULAR, UINT64,   coinID,            2) \
X(a, CALLBACK, SINGULAR, BYTES,    challengeTransfer,   3) \
X(a, CALLBACK, SINGULAR, BYTES,    responseTransfer,   4) \
X(a, CALLBACK, SINGULAR, BYTES,    responseTransferBlockProof,   5) \
X(a, STATIC,   SINGULAR, UINT64,   previousTransferBlockHeight,   6)
#define iotextypes_PlumResponseChallengeExit_CALLBACK pb_default_field_callback
#define iotextypes_PlumResponseChallengeExit_DEFAULT NULL

#define iotextypes_PlumFinalizeExit_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   subChainAddress,   1) \
X(a, STATIC,   SINGULAR, UINT64,   coinID,            2)
#define iotextypes_PlumFinalizeExit_CALLBACK pb_default_field_callback
#define iotextypes_PlumFinalizeExit_DEFAULT NULL

#define iotextypes_PlumSettleDeposit_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   coinID,            1)
#define iotextypes_PlumSettleDeposit_CALLBACK NULL
#define iotextypes_PlumSettleDeposit_DEFAULT NULL

#define iotextypes_PlumTransfer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   coinID,            1) \
X(a, CALLBACK, SINGULAR, BYTES,    denomination,      2) \
X(a, CALLBACK, SINGULAR, STRING,   owner,             3) \
X(a, CALLBACK, SINGULAR, STRING,   recipient,         4)
#define iotextypes_PlumTransfer_CALLBACK pb_default_field_callback
#define iotextypes_PlumTransfer_DEFAULT NULL

#define iotextypes_ActionCore_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   SINGULAR, UINT64,   nonce,             2) \
X(a, STATIC,   SINGULAR, UINT64,   gasLimit,          3) \
X(a, STATIC,   SINGULAR, STRING,   gasPrice,          4) \
X(a, STATIC,   SINGULAR, UINT32,   chainID,           5) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,transfer,action.transfer),  10) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,execution,action.execution),  12) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,startSubChain,action.startSubChain),  13) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stopSubChain,action.stopSubChain),  14) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,putBlock,action.putBlock),  15) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,createDeposit,action.createDeposit),  16) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,settleDeposit,action.settleDeposit),  17) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,createPlumChain,action.createPlumChain),  18) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,terminatePlumChain,action.terminatePlumChain),  19) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumPutBlock,action.plumPutBlock),  20) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumCreateDeposit,action.plumCreateDeposit),  21) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumStartExit,action.plumStartExit),  22) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumChallengeExit,action.plumChallengeExit),  23) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumResponseChallengeExit,action.plumResponseChallengeExit),  24) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumFinalizeExit,action.plumFinalizeExit),  25) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumSettleDeposit,action.plumSettleDeposit),  26) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,plumTransfer,action.plumTransfer),  27) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,depositToRewardingFund,action.depositToRewardingFund),  30) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,claimFromRewardingFund,action.claimFromRewardingFund),  31) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,grantReward,action.grantReward),  32) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeCreate,action.stakeCreate),  40) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeUnstake,action.stakeUnstake),  41) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeWithdraw,action.stakeWithdraw),  42) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeAddDeposit,action.stakeAddDeposit),  43) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeRestake,action.stakeRestake),  44) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeChangeCandidate,action.stakeChangeCandidate),  45) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,stakeTransferOwnership,action.stakeTransferOwnership),  46) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,candidateRegister,action.candidateRegister),  47) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,candidateUpdate,action.candidateUpdate),  48) \
X(a, STATIC,   ONEOF,    MSG_W_CB, (action,putPollResult,action.putPollResult),  50)
#define iotextypes_ActionCore_CALLBACK NULL
#define iotextypes_ActionCore_DEFAULT NULL
#define iotextypes_ActionCore_action_transfer_MSGTYPE iotextypes_Transfer
#define iotextypes_ActionCore_action_execution_MSGTYPE iotextypes_Execution
#define iotextypes_ActionCore_action_startSubChain_MSGTYPE iotextypes_StartSubChain
#define iotextypes_ActionCore_action_stopSubChain_MSGTYPE iotextypes_StopSubChain
#define iotextypes_ActionCore_action_putBlock_MSGTYPE iotextypes_PutBlock
#define iotextypes_ActionCore_action_createDeposit_MSGTYPE iotextypes_CreateDeposit
#define iotextypes_ActionCore_action_settleDeposit_MSGTYPE iotextypes_SettleDeposit
#define iotextypes_ActionCore_action_createPlumChain_MSGTYPE iotextypes_CreatePlumChain
#define iotextypes_ActionCore_action_terminatePlumChain_MSGTYPE iotextypes_TerminatePlumChain
#define iotextypes_ActionCore_action_plumPutBlock_MSGTYPE iotextypes_PlumPutBlock
#define iotextypes_ActionCore_action_plumCreateDeposit_MSGTYPE iotextypes_PlumCreateDeposit
#define iotextypes_ActionCore_action_plumStartExit_MSGTYPE iotextypes_PlumStartExit
#define iotextypes_ActionCore_action_plumChallengeExit_MSGTYPE iotextypes_PlumChallengeExit
#define iotextypes_ActionCore_action_plumResponseChallengeExit_MSGTYPE iotextypes_PlumResponseChallengeExit
#define iotextypes_ActionCore_action_plumFinalizeExit_MSGTYPE iotextypes_PlumFinalizeExit
#define iotextypes_ActionCore_action_plumSettleDeposit_MSGTYPE iotextypes_PlumSettleDeposit
#define iotextypes_ActionCore_action_plumTransfer_MSGTYPE iotextypes_PlumTransfer
#define iotextypes_ActionCore_action_depositToRewardingFund_MSGTYPE iotextypes_DepositToRewardingFund
#define iotextypes_ActionCore_action_claimFromRewardingFund_MSGTYPE iotextypes_ClaimFromRewardingFund
#define iotextypes_ActionCore_action_grantReward_MSGTYPE iotextypes_GrantReward
#define iotextypes_ActionCore_action_stakeCreate_MSGTYPE iotextypes_StakeCreate
#define iotextypes_ActionCore_action_stakeUnstake_MSGTYPE iotextypes_StakeReclaim
#define iotextypes_ActionCore_action_stakeWithdraw_MSGTYPE iotextypes_StakeReclaim
#define iotextypes_ActionCore_action_stakeAddDeposit_MSGTYPE iotextypes_StakeAddDeposit
#define iotextypes_ActionCore_action_stakeRestake_MSGTYPE iotextypes_StakeRestake
#define iotextypes_ActionCore_action_stakeChangeCandidate_MSGTYPE iotextypes_StakeChangeCandidate
#define iotextypes_ActionCore_action_stakeTransferOwnership_MSGTYPE iotextypes_StakeTransferOwnership
#define iotextypes_ActionCore_action_candidateRegister_MSGTYPE iotextypes_CandidateRegister
#define iotextypes_ActionCore_action_candidateUpdate_MSGTYPE iotextypes_CandidateBasicInfo
#define iotextypes_ActionCore_action_putPollResult_MSGTYPE iotextypes_PutPollResult

#define iotextypes_Action_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  core,              1) \
X(a, CALLBACK, SINGULAR, BYTES,    senderPubKey,      2) \
X(a, CALLBACK, SINGULAR, BYTES,    signature,         3) \
X(a, STATIC,   SINGULAR, UENUM,    encoding,          4)
#define iotextypes_Action_CALLBACK pb_default_field_callback
#define iotextypes_Action_DEFAULT NULL
#define iotextypes_Action_core_MSGTYPE iotextypes_ActionCore

#define iotextypes_Receipt_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   status,            1) \
X(a, STATIC,   SINGULAR, UINT64,   blkHeight,         2) \
X(a, CALLBACK, SINGULAR, BYTES,    actHash,           3) \
X(a, STATIC,   SINGULAR, UINT64,   gasConsumed,       4) \
X(a, CALLBACK, SINGULAR, STRING,   contractAddress,   5) \
X(a, CALLBACK, REPEATED, MESSAGE,  logs,              6) \
X(a, CALLBACK, SINGULAR, STRING,   executionRevertMsg,   7)
#define iotextypes_Receipt_CALLBACK pb_default_field_callback
#define iotextypes_Receipt_DEFAULT NULL
#define iotextypes_Receipt_logs_MSGTYPE iotextypes_Log

#define iotextypes_Log_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   contractAddress,   1) \
X(a, CALLBACK, REPEATED, BYTES,    topics,            2) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              3) \
X(a, STATIC,   SINGULAR, UINT64,   blkHeight,         4) \
X(a, CALLBACK, SINGULAR, BYTES,    actHash,           5) \
X(a, STATIC,   SINGULAR, UINT32,   index,             6) \
X(a, CALLBACK, SINGULAR, BYTES,    blkHash,           7)
#define iotextypes_Log_CALLBACK pb_default_field_callback
#define iotextypes_Log_DEFAULT NULL

#define iotextypes_Logs_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  logs,              1)
#define iotextypes_Logs_CALLBACK pb_default_field_callback
#define iotextypes_Logs_DEFAULT NULL
#define iotextypes_Logs_logs_MSGTYPE iotextypes_Log

#define iotextypes_EvmTransfer_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    amount,            1) \
X(a, CALLBACK, SINGULAR, STRING,   from,              2) \
X(a, CALLBACK, SINGULAR, STRING,   to,                3)
#define iotextypes_EvmTransfer_CALLBACK pb_default_field_callback
#define iotextypes_EvmTransfer_DEFAULT NULL

#define iotextypes_EvmTransferList_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  evmTransfers,      1)
#define iotextypes_EvmTransferList_CALLBACK pb_default_field_callback
#define iotextypes_EvmTransferList_DEFAULT NULL
#define iotextypes_EvmTransferList_evmTransfers_MSGTYPE iotextypes_EvmTransfer

#define iotextypes_ActionEvmTransfer_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    actionHash,        1) \
X(a, STATIC,   SINGULAR, UINT64,   numEvmTransfers,   2) \
X(a, CALLBACK, REPEATED, MESSAGE,  evmTransfers,      3)
#define iotextypes_ActionEvmTransfer_CALLBACK pb_default_field_callback
#define iotextypes_ActionEvmTransfer_DEFAULT NULL
#define iotextypes_ActionEvmTransfer_evmTransfers_MSGTYPE iotextypes_EvmTransfer

#define iotextypes_BlockEvmTransfer_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   blockHeight,       1) \
X(a, STATIC,   SINGULAR, UINT64,   numEvmTransfers,   2) \
X(a, CALLBACK, REPEATED, MESSAGE,  actionEvmTransfers,   3)
#define iotextypes_BlockEvmTransfer_CALLBACK pb_default_field_callback
#define iotextypes_BlockEvmTransfer_DEFAULT NULL
#define iotextypes_BlockEvmTransfer_actionEvmTransfers_MSGTYPE iotextypes_ActionEvmTransfer

#define iotextypes_DepositToRewardingFund_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            1) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              2)
#define iotextypes_DepositToRewardingFund_CALLBACK pb_default_field_callback
#define iotextypes_DepositToRewardingFund_DEFAULT NULL

#define iotextypes_ClaimFromRewardingFund_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   amount,            1) \
X(a, CALLBACK, SINGULAR, BYTES,    data,              2)
#define iotextypes_ClaimFromRewardingFund_CALLBACK pb_default_field_callback
#define iotextypes_ClaimFromRewardingFund_DEFAULT NULL

#define iotextypes_GrantReward_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT64,   height,            2)
#define iotextypes_GrantReward_CALLBACK NULL
#define iotextypes_GrantReward_DEFAULT NULL

extern const pb_msgdesc_t iotextypes_Transfer_msg;
extern const pb_msgdesc_t iotextypes_Candidate_msg;
extern const pb_msgdesc_t iotextypes_CandidateList_msg;
extern const pb_msgdesc_t iotextypes_PutPollResult_msg;
extern const pb_msgdesc_t iotextypes_Execution_msg;
extern const pb_msgdesc_t iotextypes_StakeCreate_msg;
extern const pb_msgdesc_t iotextypes_StakeReclaim_msg;
extern const pb_msgdesc_t iotextypes_StakeAddDeposit_msg;
extern const pb_msgdesc_t iotextypes_StakeRestake_msg;
extern const pb_msgdesc_t iotextypes_StakeChangeCandidate_msg;
extern const pb_msgdesc_t iotextypes_StakeTransferOwnership_msg;
extern const pb_msgdesc_t iotextypes_CandidateBasicInfo_msg;
extern const pb_msgdesc_t iotextypes_CandidateRegister_msg;
extern const pb_msgdesc_t iotextypes_StartSubChain_msg;
extern const pb_msgdesc_t iotextypes_StopSubChain_msg;
extern const pb_msgdesc_t iotextypes_MerkleRoot_msg;
extern const pb_msgdesc_t iotextypes_PutBlock_msg;
extern const pb_msgdesc_t iotextypes_CreateDeposit_msg;
extern const pb_msgdesc_t iotextypes_SettleDeposit_msg;
extern const pb_msgdesc_t iotextypes_CreatePlumChain_msg;
extern const pb_msgdesc_t iotextypes_TerminatePlumChain_msg;
extern const pb_msgdesc_t iotextypes_PlumPutBlock_msg;
extern const pb_msgdesc_t iotextypes_PlumPutBlock_RootsEntry_msg;
extern const pb_msgdesc_t iotextypes_PlumCreateDeposit_msg;
extern const pb_msgdesc_t iotextypes_PlumStartExit_msg;
extern const pb_msgdesc_t iotextypes_PlumChallengeExit_msg;
extern const pb_msgdesc_t iotextypes_PlumResponseChallengeExit_msg;
extern const pb_msgdesc_t iotextypes_PlumFinalizeExit_msg;
extern const pb_msgdesc_t iotextypes_PlumSettleDeposit_msg;
extern const pb_msgdesc_t iotextypes_PlumTransfer_msg;
extern const pb_msgdesc_t iotextypes_ActionCore_msg;
extern const pb_msgdesc_t iotextypes_Action_msg;
extern const pb_msgdesc_t iotextypes_Receipt_msg;
extern const pb_msgdesc_t iotextypes_Log_msg;
extern const pb_msgdesc_t iotextypes_Logs_msg;
extern const pb_msgdesc_t iotextypes_EvmTransfer_msg;
extern const pb_msgdesc_t iotextypes_EvmTransferList_msg;
extern const pb_msgdesc_t iotextypes_ActionEvmTransfer_msg;
extern const pb_msgdesc_t iotextypes_BlockEvmTransfer_msg;
extern const pb_msgdesc_t iotextypes_DepositToRewardingFund_msg;
extern const pb_msgdesc_t iotextypes_ClaimFromRewardingFund_msg;
extern const pb_msgdesc_t iotextypes_GrantReward_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define iotextypes_Transfer_fields &iotextypes_Transfer_msg
#define iotextypes_Candidate_fields &iotextypes_Candidate_msg
#define iotextypes_CandidateList_fields &iotextypes_CandidateList_msg
#define iotextypes_PutPollResult_fields &iotextypes_PutPollResult_msg
#define iotextypes_Execution_fields &iotextypes_Execution_msg
#define iotextypes_StakeCreate_fields &iotextypes_StakeCreate_msg
#define iotextypes_StakeReclaim_fields &iotextypes_StakeReclaim_msg
#define iotextypes_StakeAddDeposit_fields &iotextypes_StakeAddDeposit_msg
#define iotextypes_StakeRestake_fields &iotextypes_StakeRestake_msg
#define iotextypes_StakeChangeCandidate_fields &iotextypes_StakeChangeCandidate_msg
#define iotextypes_StakeTransferOwnership_fields &iotextypes_StakeTransferOwnership_msg
#define iotextypes_CandidateBasicInfo_fields &iotextypes_CandidateBasicInfo_msg
#define iotextypes_CandidateRegister_fields &iotextypes_CandidateRegister_msg
#define iotextypes_StartSubChain_fields &iotextypes_StartSubChain_msg
#define iotextypes_StopSubChain_fields &iotextypes_StopSubChain_msg
#define iotextypes_MerkleRoot_fields &iotextypes_MerkleRoot_msg
#define iotextypes_PutBlock_fields &iotextypes_PutBlock_msg
#define iotextypes_CreateDeposit_fields &iotextypes_CreateDeposit_msg
#define iotextypes_SettleDeposit_fields &iotextypes_SettleDeposit_msg
#define iotextypes_CreatePlumChain_fields &iotextypes_CreatePlumChain_msg
#define iotextypes_TerminatePlumChain_fields &iotextypes_TerminatePlumChain_msg
#define iotextypes_PlumPutBlock_fields &iotextypes_PlumPutBlock_msg
#define iotextypes_PlumPutBlock_RootsEntry_fields &iotextypes_PlumPutBlock_RootsEntry_msg
#define iotextypes_PlumCreateDeposit_fields &iotextypes_PlumCreateDeposit_msg
#define iotextypes_PlumStartExit_fields &iotextypes_PlumStartExit_msg
#define iotextypes_PlumChallengeExit_fields &iotextypes_PlumChallengeExit_msg
#define iotextypes_PlumResponseChallengeExit_fields &iotextypes_PlumResponseChallengeExit_msg
#define iotextypes_PlumFinalizeExit_fields &iotextypes_PlumFinalizeExit_msg
#define iotextypes_PlumSettleDeposit_fields &iotextypes_PlumSettleDeposit_msg
#define iotextypes_PlumTransfer_fields &iotextypes_PlumTransfer_msg
#define iotextypes_ActionCore_fields &iotextypes_ActionCore_msg
#define iotextypes_Action_fields &iotextypes_Action_msg
#define iotextypes_Receipt_fields &iotextypes_Receipt_msg
#define iotextypes_Log_fields &iotextypes_Log_msg
#define iotextypes_Logs_fields &iotextypes_Logs_msg
#define iotextypes_EvmTransfer_fields &iotextypes_EvmTransfer_msg
#define iotextypes_EvmTransferList_fields &iotextypes_EvmTransferList_msg
#define iotextypes_ActionEvmTransfer_fields &iotextypes_ActionEvmTransfer_msg
#define iotextypes_BlockEvmTransfer_fields &iotextypes_BlockEvmTransfer_msg
#define iotextypes_DepositToRewardingFund_fields &iotextypes_DepositToRewardingFund_msg
#define iotextypes_ClaimFromRewardingFund_fields &iotextypes_ClaimFromRewardingFund_msg
#define iotextypes_GrantReward_fields &iotextypes_GrantReward_msg

/* Maximum encoded size of messages (where known) */
/* iotextypes_Transfer_size depends on runtime parameters */
/* iotextypes_Candidate_size depends on runtime parameters */
/* iotextypes_CandidateList_size depends on runtime parameters */
/* iotextypes_PutPollResult_size depends on runtime parameters */
/* iotextypes_Execution_size depends on runtime parameters */
/* iotextypes_StakeCreate_size depends on runtime parameters */
/* iotextypes_StakeReclaim_size depends on runtime parameters */
/* iotextypes_StakeAddDeposit_size depends on runtime parameters */
/* iotextypes_StakeRestake_size depends on runtime parameters */
/* iotextypes_StakeChangeCandidate_size depends on runtime parameters */
/* iotextypes_StakeTransferOwnership_size depends on runtime parameters */
/* iotextypes_CandidateRegister_size depends on runtime parameters */
/* iotextypes_StartSubChain_size depends on runtime parameters */
/* iotextypes_StopSubChain_size depends on runtime parameters */
/* iotextypes_MerkleRoot_size depends on runtime parameters */
/* iotextypes_PutBlock_size depends on runtime parameters */
/* iotextypes_CreateDeposit_size depends on runtime parameters */
/* iotextypes_SettleDeposit_size depends on runtime parameters */
/* iotextypes_TerminatePlumChain_size depends on runtime parameters */
/* iotextypes_PlumPutBlock_size depends on runtime parameters */
/* iotextypes_PlumPutBlock_RootsEntry_size depends on runtime parameters */
/* iotextypes_PlumCreateDeposit_size depends on runtime parameters */
/* iotextypes_PlumStartExit_size depends on runtime parameters */
/* iotextypes_PlumChallengeExit_size depends on runtime parameters */
/* iotextypes_PlumResponseChallengeExit_size depends on runtime parameters */
/* iotextypes_PlumFinalizeExit_size depends on runtime parameters */
/* iotextypes_PlumTransfer_size depends on runtime parameters */
/* iotextypes_ActionCore_size depends on runtime parameters */
/* iotextypes_Action_size depends on runtime parameters */
/* iotextypes_Receipt_size depends on runtime parameters */
/* iotextypes_Log_size depends on runtime parameters */
/* iotextypes_Logs_size depends on runtime parameters */
/* iotextypes_EvmTransfer_size depends on runtime parameters */
/* iotextypes_EvmTransferList_size depends on runtime parameters */
/* iotextypes_ActionEvmTransfer_size depends on runtime parameters */
/* iotextypes_BlockEvmTransfer_size depends on runtime parameters */
/* iotextypes_DepositToRewardingFund_size depends on runtime parameters */
/* iotextypes_ClaimFromRewardingFund_size depends on runtime parameters */
#define iotextypes_CandidateBasicInfo_size       129
#define iotextypes_CreatePlumChain_size          0
#define iotextypes_GrantReward_size              13
#define iotextypes_PlumSettleDeposit_size        11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
